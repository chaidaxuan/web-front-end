angular.module('app', ['ngAnimate', 'ngTouch', 'ui.grid'])
    .controller('MainCtrl', MainCtrl)
    .filter('mapGender', mapGender);

MainCtrl.$inject = ['$http', 'uiGridConstants'];

function MainCtrl($http, uiGridConstants) {
    var vm = this,
        today = new Date(),
        nextWeek = new Date();

    nextWeek.setDate(nextWeek.getDate() + 7);

    vm.highlightFilteredHeader = function (row, rowRenderIndex, col, colRenderIndex) {
        if (col.filters[0].term) {
            return 'header-filtered';
        } else {
            return '';
        }
    };

    vm.gridOptions = {
        enableFiltering: true,
        onRegisterApi: function (gridApi) {
            vm.gridApi = gridApi;
        },
        columnDefs: [
            // default
            { field: 'name', headerCellClass: vm.highlightFilteredHeader },
            // pre-populated search field
            {
                field: 'gender', filter: {
                    term: '1',
                    type: uiGridConstants.filter.SELECT,
                    selectOptions: [{ value: '1', label: 'male' }, { value: '2', label: 'female' }, { value: '3', label: 'unknown' }, { value: '4', label: 'not stated' }, { value: '5', label: 'a really long value that extends things' }]
                },
                cellFilter: 'mapGender', headerCellClass: vm.highlightFilteredHeader
            },
            // no filter input
            {
                field: 'company', enableFiltering: false, filter: {
                    noTerm: true,
                    condition: function (searchTerm, cellValue) {
                        return cellValue.match(/a/);
                    }
                }
            },
            // specifies one of the built-in conditions
            // and a placeholder for the input
            {
                field: 'email',
                filter: {
                    condition: uiGridConstants.filter.ENDS_WITH,
                    placeholder: 'ends with'
                }, headerCellClass: vm.highlightFilteredHeader
            },
            // custom condition function
            {
                field: 'phone',
                filter: {
                    condition: function (searchTerm, cellValue) {
                        var strippedValue = (cellValue + '').replace(/[^\d]/g, '');
                        return strippedValue.indexOf(searchTerm) >= 0;
                    }
                }, headerCellClass: vm.highlightFilteredHeader
            },
            // multiple filters
            {
                field: 'age', filters: [
                    {
                        condition: uiGridConstants.filter.GREATER_THAN,
                        placeholder: 'greater than'
                    },
                    {
                        condition: uiGridConstants.filter.LESS_THAN,
                        placeholder: 'less than'
                    }
                ], headerCellClass: vm.highlightFilteredHeader
            },
            // date filter
            {
                field: 'mixedDate', cellFilter: 'date', width: '15%', filter: {
                    condition: uiGridConstants.filter.LESS_THAN,
                    placeholder: 'less than',
                    term: nextWeek
                }, headerCellClass: vm.highlightFilteredHeader
            },
            {
                field: 'mixedDate',
                displayName: 'Long Date',
                cellFilter: 'date:"longDate"',
                filterCellFiltered: true,
                width: '15%'
            }
        ]
    };

    $http.get('/data/500_complex.json')
        .then(function (response) {
            vm.gridOptions.data = response.data;
            vm.gridOptions.data[0].age = -5;

            response.data.forEach(function addDates(row, index) {
                row.mixedDate = new Date();
                row.mixedDate.setDate(today.getDate() + (index % 14));
                row.gender = row.gender === 'male' ? '1' : '2';
            });
        });

    vm.toggleFiltering = function () {
        vm.gridOptions.enableFiltering = !vm.gridOptions.enableFiltering;
        vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);
    };
}

function mapGender() {
    var genderHash = {
        1: 'male',
        2: 'female'
    };

    return function (input) {
        if (!input) {
            return '';
        } else {
            return genderHash[input];
        }
    };
}